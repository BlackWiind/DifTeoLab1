# Алгоритм Краскала

import csv

# чтение данных из файла
with open("data.txt") as f:
    data = [list(map(int, row)) for row in csv.reader(f, delimiter=' ')]

# список ребер графа (длина, вершина 1, вершина 2)
R = [(data[column][row], row+1, column+1) for row in range(10) for column in range(10) if data[column][row] != 0]


Rs = sorted(R, key=lambda x: x[0])
U = set()  # список соединенных вершин
D = {}  # словарь списка изолированных групп вершин
T = []  # список ребер остова
w = 0   # вес остова


for r in Rs:
    if r[1] not in U or r[2] not in U:  # проверка для исключения циклов в остове
        if r[1] not in U and r[2] not in U:  # если обе вершины не соединены, то
            D[r[1]] = [r[1], r[2]]  # формируем в словаре ключ с номерами вершин
            D[r[2]] = D[r[1]]  # и связываем их с одним и тем же списком вершин
        else:
            if not D.get(r[1]):  # если в словаре нет первой вершины, то
                D[r[2]].append(r[1])  # добавляем в список первую вершину
                D[r[1]] = D[r[2]]  # и добавляем ключ с номером первой вершины
            else:
                D[r[1]].append(r[2])  # иначе, все то же самое делаем со второй вершиной
                D[r[2]] = D[r[1]]

        T.append(r)
        w += r[0]
        U.add(r[1])
        U.add(r[2])

for r in Rs:  # проходим по ребрам второй раз и объединяем разрозненные группы вершин
    if r[2] not in D[r[1]]:  # если вершины принадлежат разным группам, то объединяем
        T.append(r)  # добавляем ребро в остов
        gr1 = D[r[1]]
        D[r[1]] += D[r[2]]  # объединем списки двух групп вершин
        D[r[2]] += gr1

print(T)
print(f"Вес остова = {w}.")
